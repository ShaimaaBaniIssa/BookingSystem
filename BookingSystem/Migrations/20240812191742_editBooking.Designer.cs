// <auto-generated />
using System;
using BookingSystem.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;

#nullable disable

namespace BookingSystem.Migrations
{
    [DbContext(typeof(ModelContext))]
    [Migration("20240812191742_editBooking")]
    partial class editBooking
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("C##SHAIMAA2")
                .UseCollation("USING_NLS_COMP")
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BookingSystem.Models.Aboutusdatum", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(38)")
                        .HasColumnName("ID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("DESCRIPTION");

                    b.Property<string>("Imgpath1")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("IMGPATH1");

                    b.Property<string>("Imgpath2")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("IMGPATH2");

                    b.Property<string>("Imgpath3")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("IMGPATH3");

                    b.Property<string>("Imgpath4")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("IMGPATH4");

                    b.Property<string>("Title")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(25)")
                        .HasColumnName("TITLE");

                    b.HasKey("Id")
                        .HasName("SYS_C008631");

                    b.ToTable("ABOUTUSDATA", "C##SHAIMAA2");
                });

            modelBuilder.Entity("BookingSystem.Models.Booking", b =>
                {
                    b.Property<decimal>("Bookingid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(38)")
                        .HasColumnName("BOOKINGID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("Bookingid"));

                    b.Property<string>("AppUserId")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<DateTime?>("Checkin")
                        .HasColumnType("DATE")
                        .HasColumnName("CHECKIN");

                    b.Property<DateTime?>("Checkout")
                        .HasColumnType("DATE")
                        .HasColumnName("CHECKOUT");

                    b.Property<decimal?>("Numberofpersons")
                        .HasColumnType("NUMBER(38)")
                        .HasColumnName("NUMBEROFPERSONS");

                    b.Property<decimal?>("Roomid")
                        .HasColumnType("NUMBER(38)")
                        .HasColumnName("ROOMID");

                    b.Property<string>("Status")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("STATUS");

                    b.Property<decimal?>("Totalprice")
                        .HasColumnType("NUMBER")
                        .HasColumnName("TOTALPRICE");

                    b.HasKey("Bookingid")
                        .HasName("SYS_C008623");

                    b.HasIndex("AppUserId");

                    b.HasIndex("Roomid");

                    b.ToTable("BOOKING", "C##SHAIMAA2");
                });

            modelBuilder.Entity("BookingSystem.Models.Homedatum", b =>
                {
                    b.Property<decimal>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(38)")
                        .HasColumnName("ID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("DESCRIPTION");

                    b.Property<string>("Imgpath1")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("IMGPATH1");

                    b.Property<string>("Imgpath2")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("IMGPATH2");

                    b.Property<string>("Imgpath3")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("IMGPATH3");

                    b.Property<string>("Logopath")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("LOGOPATH");

                    b.Property<string>("Title")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(25)")
                        .HasColumnName("TITLE");

                    b.HasKey("Id")
                        .HasName("SYS_C008629");

                    b.ToTable("HOMEDATA", "C##SHAIMAA2");
                });

            modelBuilder.Entity("BookingSystem.Models.Hotel", b =>
                {
                    b.Property<decimal>("Hotelid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(38)")
                        .HasColumnName("HOTELID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("Hotelid"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(35)")
                        .HasColumnName("ADDRESS");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(35)")
                        .HasColumnName("CITY");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(35)")
                        .HasColumnName("COUNTRY");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(200)")
                        .HasColumnName("DESCRIPTION");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(35)")
                        .HasColumnName("EMAIL");

                    b.Property<string>("Imagepath")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("IMAGEPATH");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(35)")
                        .HasColumnName("NAME");

                    b.Property<string>("Phonenumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(15)")
                        .HasColumnName("PHONENUMBER");

                    b.HasKey("Hotelid")
                        .HasName("SYS_C008615");

                    b.ToTable("HOTEL", "C##SHAIMAA2");
                });

            modelBuilder.Entity("BookingSystem.Models.Room", b =>
                {
                    b.Property<decimal>("Roomid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(38)")
                        .HasColumnName("ROOMID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("Roomid"));

                    b.Property<decimal?>("Availabilty")
                        .HasColumnType("NUMBER(38)")
                        .HasColumnName("AVAILABILTY");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(200)")
                        .HasColumnName("DESCRIPTION");

                    b.Property<decimal?>("Hotelid")
                        .HasColumnType("NUMBER(38)")
                        .HasColumnName("HOTELID");

                    b.Property<string>("Imagepath")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(100)")
                        .HasColumnName("IMAGEPATH");

                    b.Property<decimal?>("Maxcapacity")
                        .HasColumnType("NUMBER(38)")
                        .HasColumnName("MAXCAPACITY");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(35)")
                        .HasColumnName("NAME");

                    b.Property<decimal?>("Price")
                        .HasColumnType("NUMBER")
                        .HasColumnName("PRICE");

                    b.Property<string>("Roomtype")
                        .IsRequired()
                        .HasMaxLength(35)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(35)")
                        .HasColumnName("ROOMTYPE");

                    b.HasKey("Roomid")
                        .HasName("SYS_C008620");

                    b.HasIndex("Hotelid");

                    b.ToTable("ROOM", "C##SHAIMAA2");
                });

            modelBuilder.Entity("BookingSystem.Models.Testimonial", b =>
                {
                    b.Property<decimal>("Testimonialid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(38)")
                        .HasColumnName("TESTIMONIALID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<decimal>("Testimonialid"));

                    b.Property<decimal?>("Hotelid")
                        .HasColumnType("NUMBER(38)")
                        .HasColumnName("HOTELID");

                    b.Property<string>("Reviewtext")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(20)")
                        .HasColumnName("REVIEWTEXT");

                    b.HasKey("Testimonialid")
                        .HasName("SYS_C008626");

                    b.HasIndex("Hotelid");

                    b.ToTable("TESTIMONIAL", "C##SHAIMAA2");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("\"NormalizedName\" IS NOT NULL");

                    b.ToTable("AspNetRoles", "C##SHAIMAA2");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", "C##SHAIMAA2");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("NUMBER(1)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("NUMBER(1)");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("TIMESTAMP(7) WITH TIME ZONE");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("NUMBER(1)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("NUMBER(1)");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("NVARCHAR2(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("\"NormalizedUserName\" IS NOT NULL");

                    b.ToTable("AspNetUsers", "C##SHAIMAA2");

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityUser");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", "C##SHAIMAA2");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR2(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR2(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", "C##SHAIMAA2");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("NVARCHAR2(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", "C##SHAIMAA2");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("NVARCHAR2(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR2(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("NVARCHAR2(128)");

                    b.Property<string>("Value")
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", "C##SHAIMAA2");
                });

            modelBuilder.Entity("BookingSystem.Models.AppUser", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUser");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.HasDiscriminator().HasValue("AppUser");
                });

            modelBuilder.Entity("BookingSystem.Models.Booking", b =>
                {
                    b.HasOne("BookingSystem.Models.AppUser", "AppUser")
                        .WithMany()
                        .HasForeignKey("AppUserId");

                    b.HasOne("BookingSystem.Models.Room", "Room")
                        .WithMany("Bookings")
                        .HasForeignKey("Roomid")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("SYS_C008624");

                    b.Navigation("AppUser");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("BookingSystem.Models.Room", b =>
                {
                    b.HasOne("BookingSystem.Models.Hotel", "Hotel")
                        .WithMany("Rooms")
                        .HasForeignKey("Hotelid")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("SYS_C008621");

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("BookingSystem.Models.Testimonial", b =>
                {
                    b.HasOne("BookingSystem.Models.Hotel", "Hotel")
                        .WithMany("Testimonials")
                        .HasForeignKey("Hotelid")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("SYS_C008627");

                    b.Navigation("Hotel");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BookingSystem.Models.Hotel", b =>
                {
                    b.Navigation("Rooms");

                    b.Navigation("Testimonials");
                });

            modelBuilder.Entity("BookingSystem.Models.Room", b =>
                {
                    b.Navigation("Bookings");
                });
#pragma warning restore 612, 618
        }
    }
}
